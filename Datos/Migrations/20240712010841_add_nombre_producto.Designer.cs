// <auto-generated />
using System;
using Datos.AplicationDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Datos.Migrations
{
    [DbContext(typeof(SistemapContext))]
    [Migration("20240712010841_add_nombre_producto")]
    partial class add_nombre_producto
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Datos.Models.Atributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCategoriaAtributo")
                        .HasColumnName("fk_categoria_atributo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Unidades")
                        .HasColumnName("unidades")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriaAtributo");

                    b.ToTable("atributos");
                });

            modelBuilder.Entity("Datos.Models.AtributoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAtributo")
                        .HasColumnName("fk_atributo")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnName("fk_producto")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasColumnName("valor")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id");

                    b.HasIndex("IdAtributo");

                    b.HasIndex("IdProducto");

                    b.ToTable("atributos_producto");
                });

            modelBuilder.Entity("Datos.Models.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.Property<string>("Direccion")
                        .HasColumnName("direccion")
                        .HasColumnType("varchar(500) CHARACTER SET utf8mb4")
                        .HasMaxLength(500);

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCategoriaBanco")
                        .HasColumnName("idCategoriaBanco")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Telefono")
                        .HasColumnName("telefono")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(20);

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdCategoriaBanco");

                    b.ToTable("bancos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = 1ul,
                            Descripcion = "BANCO PICHINCHA MIAMI AGENCY",
                            Direccion = "",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 8,
                            Nombre = "BANCO PICHINCHA MIAMI AGENCY"
                        },
                        new
                        {
                            Id = 2,
                            Activo = 1ul,
                            Descripcion = "ALMACENERA ALMACOPIO S.A.",
                            Direccion = "KM. 3 1/2 VIA DURAN TAMBO (ENTRANDO AV. TANASA)",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 9,
                            Nombre = "ALMACENERA ALMACOPIO S.A.",
                            Telefono = "(04)2800-114 - 2800-115"
                        },
                        new
                        {
                            Id = 3,
                            Activo = 1ul,
                            Descripcion = "ALMACENERA DEL AGRO S.A. (ALMAGRO)",
                            Direccion = "AV. 25 JULIO KM 4 1/2 VIA PTO MARITIMO",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 9,
                            Nombre = "ALMACENERA DEL AGRO S.A. (ALMAGRO)",
                            Telefono = "04-2484700 al 707"
                        },
                        new
                        {
                            Id = 4,
                            Activo = 1ul,
                            Descripcion = "ALMACENERA DEL ECUADOR S.A. ALMESA",
                            Direccion = "CADENA Y AV. MONSEÑOR DOMINGO, COMIN, FRENTE A LA CDLA. PRADERA II Y IIIJUNTO A LAS BODEGAS DE CONAUTO",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 9,
                            Nombre = "ALMACENERA DEL ECUADOR S.A. ALMESA",
                            Telefono = "(04)2490-070/ (04)2495-933"
                        },
                        new
                        {
                            Id = 5,
                            Activo = 1ul,
                            Descripcion = "BANCO FINANCIERO DEL PERU",
                            Direccion = "",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 5,
                            Nombre = "BANCO FINANCIERO DEL PERU"
                        },
                        new
                        {
                            Id = 6,
                            Activo = 1ul,
                            Descripcion = "CITIBANK, N.A. SUCURSAL ECUADOR",
                            Direccion = "AV REPUBLICA DEL SALVADOR N36-230 Y AV NNUU",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 4,
                            Nombre = "CITIBANK, N.A. SUCURSAL ECUADOR",
                            Telefono = "3939063"
                        },
                        new
                        {
                            Id = 7,
                            Activo = 1ul,
                            Descripcion = "BANCO AMAZONAS S.A.",
                            Direccion = "AV. FRANCISCO DE ORELLANA 238 Y ALBERTO BORGES",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO AMAZONAS S.A.",
                            Telefono = "(04)2683-600"
                        },
                        new
                        {
                            Id = 8,
                            Activo = 1ul,
                            Descripcion = "BANCO AUSTRO S.A.",
                            Direccion = "SUCRE Y BORRERO ESQ.",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO AUSTRO S.A.",
                            Telefono = "07831222"
                        },
                        new
                        {
                            Id = 9,
                            Activo = 1ul,
                            Descripcion = "BANCO GUAYAQUIL S.A.",
                            Direccion = "CALLES PICHINCHA 105-107 Y FRANCISCO DE PAULA YCAZA",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO GUAYAQUIL S.A.",
                            Telefono = "(04)3730-100"
                        },
                        new
                        {
                            Id = 10,
                            Activo = 1ul,
                            Descripcion = "BANCO BOLIVARIANO C.A.",
                            Direccion = "JUNIN 200 Y PANAMA",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO BOLIVARIANO C.A.",
                            Telefono = "2305000"
                        },
                        new
                        {
                            Id = 11,
                            Activo = 1ul,
                            Descripcion = "BANCO COMERCIAL DE MANABI S.A.",
                            Direccion = "AV. REALES TAMARINDO Y ALAMOS",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO COMERCIAL DE MANABI S.A.",
                            Telefono = "05 632 222 / 632 223"
                        },
                        new
                        {
                            Id = 12,
                            Activo = 1ul,
                            Descripcion = "BANCO DEL LITORAL S.A.",
                            Direccion = "MALECON 514 E IMBABURA",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO DEL LITORAL S.A.",
                            Telefono = "59342313151"
                        },
                        new
                        {
                            Id = 13,
                            Activo = 1ul,
                            Descripcion = "BANCO GENERAL RUMIÑAHUI S.A.",
                            Direccion = "AV. REPUBLICA E37-55 Y MARTIN CARRION",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO GENERAL RUMIÑAHUI S.A.",
                            Telefono = "2509-929 2221-372"
                        },
                        new
                        {
                            Id = 14,
                            Activo = 1ul,
                            Descripcion = "BANCO INTERNACIONAL S.A.",
                            Direccion = "AV. PATRIA E4-21 Y 9 DE OCTUBRE",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO INTERNACIONAL S.A.",
                            Telefono = "(02)565-547548/549/550"
                        },
                        new
                        {
                            Id = 15,
                            Activo = 1ul,
                            Descripcion = "BANCO DE LOJA S.A.",
                            Direccion = "ROCAFUERTE y BOLIVAR (ESQ.)",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO DE LOJA S.A.",
                            Telefono = "(07)2571 682"
                        },
                        new
                        {
                            Id = 16,
                            Activo = 1ul,
                            Descripcion = "BANCO DE MACHALA S.A.",
                            Direccion = "9 DE MAYO Y ROCAFUERTE ESQUINA",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO DE MACHALA S.A.",
                            Telefono = "59372930100"
                        },
                        new
                        {
                            Id = 17,
                            Activo = 1ul,
                            Descripcion = "BANCO DEL PACIFICO S.A.",
                            Direccion = "P.YCAZA 200 ENTRE PEDRO CARBO Y PICHINCHA",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO DEL PACIFICO S.A.",
                            Telefono = "(04)2328333 -2566010"
                        },
                        new
                        {
                            Id = 18,
                            Activo = 1ul,
                            Descripcion = "BANCO PICHINCHA C.A.",
                            Direccion = "AV. AMAZONAS 4560 Y PEREIRA",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO PICHINCHA C.A.",
                            Telefono = "980-980/981"
                        },
                        new
                        {
                            Id = 19,
                            Activo = 1ul,
                            Descripcion = "BANCO DE LA PRODUCCION S.A.",
                            Direccion = "AV. SIMON BOLIVAR Y VIA A NAYON, COMPLEJO CORPORATIVO EKOPARK, TORRE I",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO DE LA PRODUCCION S.A.",
                            Telefono = "2563-900"
                        },
                        new
                        {
                            Id = 20,
                            Activo = 1ul,
                            Descripcion = "BANCO SOLIDARIO S.A.",
                            Direccion = "AV. AMAZONAS N36-69 Y COREA",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO SOLIDARIO S.A.",
                            Telefono = "(02) 3950600"
                        },
                        new
                        {
                            Id = 21,
                            Activo = 1ul,
                            Descripcion = "BANCO COOPNACIONAL S.A.",
                            Direccion = "CAPITAN NAJERA 4210 Y YAHUACHI",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO COOPNACIONAL S.A.",
                            Telefono = "(04)2471118"
                        },
                        new
                        {
                            Id = 22,
                            Activo = 1ul,
                            Descripcion = "BANCO DE LA PRODUCCION S.A. PRODUBANCO",
                            Direccion = "AV. 12 DE OCTUBRE Y CAAMANO, EDIFICIO WORLD TRADE CENTER",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO DE LA PRODUCCION S.A. PRODUBANCO",
                            Telefono = "3988600"
                        },
                        new
                        {
                            Id = 23,
                            Activo = 1ul,
                            Descripcion = "BANCO RIO S.A.",
                            Direccion = "VELEZ 303 Y CORDOVA ESQUINA",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO RIO S.A.",
                            Telefono = "2513140"
                        },
                        new
                        {
                            Id = 24,
                            Activo = 1ul,
                            Descripcion = "BANCO SOLIDARIO S.A.",
                            Direccion = "AV. AMAZONAS N36-69 Y COREA",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO SOLIDARIO S.A.",
                            Telefono = "(02) 3950600"
                        },
                        new
                        {
                            Id = 25,
                            Activo = 1ul,
                            Descripcion = "BANCO TERRITORIAL S.A.",
                            Direccion = "9 DE OCTUBRE 300 Y MALECON",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO TERRITORIAL S.A.",
                            Telefono = "2323700"
                        },
                        new
                        {
                            Id = 26,
                            Activo = 1ul,
                            Descripcion = "BANCO CAPITAL S.A.",
                            Direccion = "AV. 6 DE DICIEMBRE N24-600 Y COLON",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO CAPITAL S.A.",
                            Telefono = "2433650"
                        },
                        new
                        {
                            Id = 27,
                            Activo = 1ul,
                            Descripcion = "BANCO PROCREDIT S.A.",
                            Direccion = "AV. 10 DE AGOSTO N36-150 Y MURGEON",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO PROCREDIT S.A.",
                            Telefono = "2446000"
                        },
                        new
                        {
                            Id = 28,
                            Activo = 1ul,
                            Descripcion = "BANCO PROMERICA S.A.",
                            Direccion = "AV. FRANCISCO DE ORELLANA 240 Y AV. JOSE CASTILLO",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO PROMERICA S.A.",
                            Telefono = "2696000"
                        },
                        new
                        {
                            Id = 29,
                            Activo = 1ul,
                            Descripcion = "BANCO DE LA UNION S.A.",
                            Direccion = "AV. 9 DE OCTUBRE Y MALECON",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 1,
                            Nombre = "BANCO DE LA UNION S.A.",
                            Telefono = "2325151"
                        },
                        new
                        {
                            Id = 30,
                            Activo = 1ul,
                            Descripcion = "ALMACENERA GUAYAQUIL CEM ALMAQUIL",
                            Direccion = "AV. 25 DE JULIO KM 4 1/2 VIA PUERTO MARITIMO",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 642, DateTimeKind.Utc).AddTicks(2655),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCategoriaBanco = 9,
                            Nombre = "ALMACENERA GUAYAQUIL CEM ALMAQUIL",
                            Telefono = "(04)2488-672"
                        });
                });

            modelBuilder.Entity("Datos.Models.CategoriaAtributo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("categorias_atributo");
                });

            modelBuilder.Entity("Datos.Models.CategoriaBanco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Descripcion")
                        .HasColumnName("descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("categorias_bancos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = 1ul,
                            Codigo = "PRIVN",
                            Descripcion = "Bancos privados nacionales",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 649, DateTimeKind.Utc).AddTicks(2678),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "BANCOS PRIVADOS NACIONALES"
                        },
                        new
                        {
                            Id = 2,
                            Activo = 1ul,
                            Codigo = "PUB",
                            Descripcion = "Banco público",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 649, DateTimeKind.Utc).AddTicks(2678),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "CASAS DE CAMBIO"
                        },
                        new
                        {
                            Id = 3,
                            Activo = 1ul,
                            Codigo = "MICRO",
                            Descripcion = "Banco de microfinanzas",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 649, DateTimeKind.Utc).AddTicks(2678),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "COMPAÑIAS DE TITULARIZACION"
                        },
                        new
                        {
                            Id = 4,
                            Activo = 1ul,
                            Codigo = "SAVINGS",
                            Descripcion = "Banco enfocado en cuentas de ahorro",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 649, DateTimeKind.Utc).AddTicks(2678),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "BANCOS PRIVADOS EXTRANJEROS"
                        },
                        new
                        {
                            Id = 5,
                            Activo = 1ul,
                            Codigo = "COMM",
                            Descripcion = "Banco que ofrece una gama completa de servicios financieros",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 649, DateTimeKind.Utc).AddTicks(2678),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "BANCOS OFF SHORE"
                        },
                        new
                        {
                            Id = 6,
                            Activo = 1ul,
                            Codigo = "COOP",
                            Descripcion = "Banco que opera bajo una estructura cooperativa",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 649, DateTimeKind.Utc).AddTicks(2678),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "OFIC. REPRESENTACION BANCOS EXTRANJEROS"
                        },
                        new
                        {
                            Id = 7,
                            Activo = 1ul,
                            Codigo = "COOP",
                            Descripcion = "Banco que opera bajo una estructura cooperativa",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 649, DateTimeKind.Utc).AddTicks(2678),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "BUROS DE INFORMACION CREDITICIA"
                        },
                        new
                        {
                            Id = 8,
                            Activo = 1ul,
                            Codigo = "AGN",
                            Descripcion = "Agencia que opera bajo la estructura de agencia",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 649, DateTimeKind.Utc).AddTicks(2678),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "AGENCIA DE BANCO NACIONAL EN EL EXTERIOR"
                        },
                        new
                        {
                            Id = 9,
                            Activo = 1ul,
                            Codigo = "AGD",
                            Descripcion = "ALMACENES GENERALES DE DEPOSITOS",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 649, DateTimeKind.Utc).AddTicks(2678),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nombre = "ALMACENES GENERALES DE DEPOSITOS"
                        });
                });

            modelBuilder.Entity("Datos.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Descripcion")
                        .HasColumnName("descripcion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("categorias_producto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = 1ul,
                            Codigo = "ELECT",
                            Descripcion = "Electrónicos",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Activo = 1ul,
                            Codigo = "HOME_APPL",
                            Descripcion = "Electrodomésticos",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Activo = 1ul,
                            Codigo = "APPAREL",
                            Descripcion = "Ropa y calzado",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Activo = 1ul,
                            Codigo = "BEAUTY",
                            Descripcion = "Belleza y cuidado personal",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Activo = 1ul,
                            Codigo = "SPORTS",
                            Descripcion = "Deportes y aire libre",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Activo = 1ul,
                            Codigo = "TOYS",
                            Descripcion = "Juguetes y juegos",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Activo = 1ul,
                            Codigo = "BOOKS",
                            Descripcion = "Libros y audiolibros",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Activo = 1ul,
                            Codigo = "GROCERY",
                            Descripcion = "Abarrotes y supermercado",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Activo = 1ul,
                            Codigo = "AUTOMOTIVE",
                            Descripcion = "Automotriz",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Activo = 1ul,
                            Codigo = "PET_SUPPLIES",
                            Descripcion = "Suministros para mascotas",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 664, DateTimeKind.Utc).AddTicks(2684),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Datos.Models.Ciudad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<int>("IdProvincia")
                        .HasColumnName("idProvincia")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id")
                        .HasName("PK_ciudad");

                    b.HasIndex("IdProvincia");

                    b.ToTable("ciudad");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IdProvincia = 1,
                            Nombre = "Cuenca"
                        },
                        new
                        {
                            Id = 2,
                            IdProvincia = 1,
                            Nombre = "Girón"
                        },
                        new
                        {
                            Id = 3,
                            IdProvincia = 1,
                            Nombre = "Gualaceo"
                        },
                        new
                        {
                            Id = 4,
                            IdProvincia = 1,
                            Nombre = "Nabón"
                        },
                        new
                        {
                            Id = 5,
                            IdProvincia = 1,
                            Nombre = "Paute"
                        },
                        new
                        {
                            Id = 6,
                            IdProvincia = 1,
                            Nombre = "Pucará"
                        },
                        new
                        {
                            Id = 7,
                            IdProvincia = 1,
                            Nombre = "San Fernando"
                        },
                        new
                        {
                            Id = 8,
                            IdProvincia = 1,
                            Nombre = "Santa Isabel"
                        },
                        new
                        {
                            Id = 9,
                            IdProvincia = 1,
                            Nombre = "Sigsig"
                        },
                        new
                        {
                            Id = 10,
                            IdProvincia = 1,
                            Nombre = "Oña"
                        },
                        new
                        {
                            Id = 11,
                            IdProvincia = 1,
                            Nombre = "Chordeleg"
                        },
                        new
                        {
                            Id = 12,
                            IdProvincia = 1,
                            Nombre = "El Pan"
                        },
                        new
                        {
                            Id = 13,
                            IdProvincia = 1,
                            Nombre = "Sevilla de Oro"
                        },
                        new
                        {
                            Id = 14,
                            IdProvincia = 1,
                            Nombre = "Guachapala"
                        },
                        new
                        {
                            Id = 15,
                            IdProvincia = 1,
                            Nombre = "Camilo Ponce Enríquez"
                        },
                        new
                        {
                            Id = 16,
                            IdProvincia = 2,
                            Nombre = "Guaranda"
                        },
                        new
                        {
                            Id = 17,
                            IdProvincia = 2,
                            Nombre = "Chillanes"
                        },
                        new
                        {
                            Id = 18,
                            IdProvincia = 2,
                            Nombre = "Chimbo"
                        },
                        new
                        {
                            Id = 19,
                            IdProvincia = 2,
                            Nombre = "Echeandía"
                        },
                        new
                        {
                            Id = 20,
                            IdProvincia = 2,
                            Nombre = "San Miguel"
                        },
                        new
                        {
                            Id = 21,
                            IdProvincia = 2,
                            Nombre = "Caluma"
                        },
                        new
                        {
                            Id = 22,
                            IdProvincia = 2,
                            Nombre = "Las Naves"
                        },
                        new
                        {
                            Id = 23,
                            IdProvincia = 3,
                            Nombre = "Azogues"
                        },
                        new
                        {
                            Id = 24,
                            IdProvincia = 3,
                            Nombre = "Biblián"
                        },
                        new
                        {
                            Id = 25,
                            IdProvincia = 3,
                            Nombre = "Cañar"
                        },
                        new
                        {
                            Id = 26,
                            IdProvincia = 3,
                            Nombre = "La Troncal"
                        },
                        new
                        {
                            Id = 27,
                            IdProvincia = 3,
                            Nombre = "El Tambo"
                        },
                        new
                        {
                            Id = 28,
                            IdProvincia = 3,
                            Nombre = "Déleg"
                        },
                        new
                        {
                            Id = 29,
                            IdProvincia = 3,
                            Nombre = "Suscal"
                        },
                        new
                        {
                            Id = 30,
                            IdProvincia = 4,
                            Nombre = "Tulcán"
                        },
                        new
                        {
                            Id = 31,
                            IdProvincia = 4,
                            Nombre = "Bolívar"
                        },
                        new
                        {
                            Id = 32,
                            IdProvincia = 4,
                            Nombre = "Espejo"
                        },
                        new
                        {
                            Id = 33,
                            IdProvincia = 4,
                            Nombre = "Mira"
                        },
                        new
                        {
                            Id = 34,
                            IdProvincia = 4,
                            Nombre = "Montúfar"
                        },
                        new
                        {
                            Id = 35,
                            IdProvincia = 4,
                            Nombre = "San Pedro de Huaca"
                        },
                        new
                        {
                            Id = 36,
                            IdProvincia = 5,
                            Nombre = "Latacunga"
                        },
                        new
                        {
                            Id = 37,
                            IdProvincia = 5,
                            Nombre = "La Maná"
                        },
                        new
                        {
                            Id = 38,
                            IdProvincia = 5,
                            Nombre = "Pangua"
                        },
                        new
                        {
                            Id = 39,
                            IdProvincia = 5,
                            Nombre = "Pujilí"
                        },
                        new
                        {
                            Id = 40,
                            IdProvincia = 5,
                            Nombre = "Salcedo"
                        },
                        new
                        {
                            Id = 41,
                            IdProvincia = 5,
                            Nombre = "Saquisilí"
                        },
                        new
                        {
                            Id = 42,
                            IdProvincia = 5,
                            Nombre = "Sigchos"
                        },
                        new
                        {
                            Id = 43,
                            IdProvincia = 6,
                            Nombre = "Riobamba"
                        },
                        new
                        {
                            Id = 44,
                            IdProvincia = 6,
                            Nombre = "Alausí"
                        },
                        new
                        {
                            Id = 45,
                            IdProvincia = 6,
                            Nombre = "Colta"
                        },
                        new
                        {
                            Id = 46,
                            IdProvincia = 6,
                            Nombre = "Chambo"
                        },
                        new
                        {
                            Id = 47,
                            IdProvincia = 6,
                            Nombre = "Chunchi"
                        },
                        new
                        {
                            Id = 48,
                            IdProvincia = 6,
                            Nombre = "Guamote"
                        },
                        new
                        {
                            Id = 49,
                            IdProvincia = 6,
                            Nombre = "Guano"
                        },
                        new
                        {
                            Id = 50,
                            IdProvincia = 6,
                            Nombre = "Pallatanga"
                        },
                        new
                        {
                            Id = 51,
                            IdProvincia = 6,
                            Nombre = "Penipe"
                        },
                        new
                        {
                            Id = 52,
                            IdProvincia = 6,
                            Nombre = "Cumandá"
                        },
                        new
                        {
                            Id = 53,
                            IdProvincia = 7,
                            Nombre = "Machala"
                        },
                        new
                        {
                            Id = 54,
                            IdProvincia = 7,
                            Nombre = "Arenillas"
                        },
                        new
                        {
                            Id = 55,
                            IdProvincia = 7,
                            Nombre = "Atahualpa"
                        },
                        new
                        {
                            Id = 56,
                            IdProvincia = 7,
                            Nombre = "Balsas"
                        },
                        new
                        {
                            Id = 57,
                            IdProvincia = 7,
                            Nombre = "Chilla"
                        },
                        new
                        {
                            Id = 58,
                            IdProvincia = 7,
                            Nombre = "El Guabo"
                        },
                        new
                        {
                            Id = 59,
                            IdProvincia = 7,
                            Nombre = "Huaquillas"
                        },
                        new
                        {
                            Id = 60,
                            IdProvincia = 7,
                            Nombre = "Marcabelí"
                        },
                        new
                        {
                            Id = 61,
                            IdProvincia = 7,
                            Nombre = "Pasaje"
                        },
                        new
                        {
                            Id = 62,
                            IdProvincia = 7,
                            Nombre = "Piñas"
                        },
                        new
                        {
                            Id = 63,
                            IdProvincia = 7,
                            Nombre = "Portovelo"
                        },
                        new
                        {
                            Id = 64,
                            IdProvincia = 7,
                            Nombre = "Santa Rosa"
                        },
                        new
                        {
                            Id = 65,
                            IdProvincia = 7,
                            Nombre = "Zaruma"
                        },
                        new
                        {
                            Id = 66,
                            IdProvincia = 7,
                            Nombre = "Las Lajas"
                        },
                        new
                        {
                            Id = 67,
                            IdProvincia = 8,
                            Nombre = "Esmeraldas"
                        },
                        new
                        {
                            Id = 68,
                            IdProvincia = 8,
                            Nombre = "Eloy Alfaro"
                        },
                        new
                        {
                            Id = 69,
                            IdProvincia = 8,
                            Nombre = "Muisne"
                        },
                        new
                        {
                            Id = 70,
                            IdProvincia = 8,
                            Nombre = "Quinindé"
                        },
                        new
                        {
                            Id = 71,
                            IdProvincia = 8,
                            Nombre = "San Lorenzo"
                        },
                        new
                        {
                            Id = 72,
                            IdProvincia = 8,
                            Nombre = "Atacames"
                        },
                        new
                        {
                            Id = 73,
                            IdProvincia = 8,
                            Nombre = "Rioverde"
                        },
                        new
                        {
                            Id = 74,
                            IdProvincia = 8,
                            Nombre = "La Concordia"
                        },
                        new
                        {
                            Id = 75,
                            IdProvincia = 9,
                            Nombre = "Guayaquil"
                        },
                        new
                        {
                            Id = 76,
                            IdProvincia = 9,
                            Nombre = "Alfredo Baquerizo Moreno (Juján)"
                        },
                        new
                        {
                            Id = 77,
                            IdProvincia = 9,
                            Nombre = "Balao"
                        },
                        new
                        {
                            Id = 78,
                            IdProvincia = 9,
                            Nombre = "Balzar"
                        },
                        new
                        {
                            Id = 79,
                            IdProvincia = 9,
                            Nombre = "Colimes"
                        },
                        new
                        {
                            Id = 80,
                            IdProvincia = 9,
                            Nombre = "Daule"
                        },
                        new
                        {
                            Id = 81,
                            IdProvincia = 9,
                            Nombre = "Durán"
                        },
                        new
                        {
                            Id = 82,
                            IdProvincia = 9,
                            Nombre = "El Empalme"
                        },
                        new
                        {
                            Id = 83,
                            IdProvincia = 9,
                            Nombre = "El Triunfo"
                        },
                        new
                        {
                            Id = 84,
                            IdProvincia = 9,
                            Nombre = "Milagro"
                        },
                        new
                        {
                            Id = 85,
                            IdProvincia = 9,
                            Nombre = "Naranjal"
                        },
                        new
                        {
                            Id = 86,
                            IdProvincia = 9,
                            Nombre = "Naranjito"
                        },
                        new
                        {
                            Id = 87,
                            IdProvincia = 9,
                            Nombre = "Palestina"
                        },
                        new
                        {
                            Id = 88,
                            IdProvincia = 9,
                            Nombre = "Pedro Carbo"
                        },
                        new
                        {
                            Id = 89,
                            IdProvincia = 9,
                            Nombre = "Samborondón"
                        },
                        new
                        {
                            Id = 90,
                            IdProvincia = 9,
                            Nombre = "Santa Lucía"
                        },
                        new
                        {
                            Id = 91,
                            IdProvincia = 9,
                            Nombre = "Salitre (Urbina Jado)"
                        },
                        new
                        {
                            Id = 92,
                            IdProvincia = 9,
                            Nombre = "San Jacinto de Yaguachi"
                        },
                        new
                        {
                            Id = 93,
                            IdProvincia = 9,
                            Nombre = "Playas"
                        },
                        new
                        {
                            Id = 94,
                            IdProvincia = 9,
                            Nombre = "Simón Bolívar"
                        },
                        new
                        {
                            Id = 95,
                            IdProvincia = 9,
                            Nombre = "Coronel Marcelino Maridueña"
                        },
                        new
                        {
                            Id = 96,
                            IdProvincia = 9,
                            Nombre = "Lomas de Sargentillo"
                        },
                        new
                        {
                            Id = 97,
                            IdProvincia = 9,
                            Nombre = "Nobol"
                        },
                        new
                        {
                            Id = 98,
                            IdProvincia = 9,
                            Nombre = "General Antonio Elizalde"
                        },
                        new
                        {
                            Id = 99,
                            IdProvincia = 9,
                            Nombre = "Isidro Ayora"
                        },
                        new
                        {
                            Id = 100,
                            IdProvincia = 10,
                            Nombre = "Ibarra"
                        },
                        new
                        {
                            Id = 101,
                            IdProvincia = 10,
                            Nombre = "Antonio Ante"
                        },
                        new
                        {
                            Id = 102,
                            IdProvincia = 10,
                            Nombre = "Cotacachi"
                        },
                        new
                        {
                            Id = 103,
                            IdProvincia = 10,
                            Nombre = "Otavalo"
                        },
                        new
                        {
                            Id = 104,
                            IdProvincia = 10,
                            Nombre = "Pimampiro"
                        },
                        new
                        {
                            Id = 105,
                            IdProvincia = 10,
                            Nombre = "San Miguel de Urcuquí"
                        },
                        new
                        {
                            Id = 106,
                            IdProvincia = 11,
                            Nombre = "Loja"
                        },
                        new
                        {
                            Id = 107,
                            IdProvincia = 11,
                            Nombre = "Calvas"
                        },
                        new
                        {
                            Id = 108,
                            IdProvincia = 11,
                            Nombre = "Catamayo"
                        },
                        new
                        {
                            Id = 109,
                            IdProvincia = 11,
                            Nombre = "Celica"
                        },
                        new
                        {
                            Id = 110,
                            IdProvincia = 11,
                            Nombre = "Chaguarpamba"
                        },
                        new
                        {
                            Id = 111,
                            IdProvincia = 11,
                            Nombre = "Espíndola"
                        },
                        new
                        {
                            Id = 112,
                            IdProvincia = 11,
                            Nombre = "Gonzanamá"
                        },
                        new
                        {
                            Id = 113,
                            IdProvincia = 11,
                            Nombre = "Macará"
                        },
                        new
                        {
                            Id = 114,
                            IdProvincia = 11,
                            Nombre = "Paltas"
                        },
                        new
                        {
                            Id = 115,
                            IdProvincia = 11,
                            Nombre = "Puyango"
                        },
                        new
                        {
                            Id = 116,
                            IdProvincia = 11,
                            Nombre = "Saraguro"
                        },
                        new
                        {
                            Id = 117,
                            IdProvincia = 11,
                            Nombre = "Sozoranga"
                        },
                        new
                        {
                            Id = 118,
                            IdProvincia = 11,
                            Nombre = "Zapotillo"
                        },
                        new
                        {
                            Id = 119,
                            IdProvincia = 11,
                            Nombre = "Pindal"
                        },
                        new
                        {
                            Id = 120,
                            IdProvincia = 11,
                            Nombre = "Quilanga"
                        },
                        new
                        {
                            Id = 121,
                            IdProvincia = 11,
                            Nombre = "Olmedo"
                        },
                        new
                        {
                            Id = 122,
                            IdProvincia = 12,
                            Nombre = "Babahoyo"
                        },
                        new
                        {
                            Id = 123,
                            IdProvincia = 12,
                            Nombre = "Baba"
                        },
                        new
                        {
                            Id = 124,
                            IdProvincia = 12,
                            Nombre = "Montalvo"
                        },
                        new
                        {
                            Id = 125,
                            IdProvincia = 12,
                            Nombre = "Puebloviejo"
                        },
                        new
                        {
                            Id = 126,
                            IdProvincia = 12,
                            Nombre = "Quevedo"
                        },
                        new
                        {
                            Id = 127,
                            IdProvincia = 12,
                            Nombre = "Urdaneta"
                        },
                        new
                        {
                            Id = 128,
                            IdProvincia = 12,
                            Nombre = "Ventanas"
                        },
                        new
                        {
                            Id = 129,
                            IdProvincia = 12,
                            Nombre = "Vínces"
                        },
                        new
                        {
                            Id = 130,
                            IdProvincia = 12,
                            Nombre = "Palenque"
                        },
                        new
                        {
                            Id = 131,
                            IdProvincia = 12,
                            Nombre = "Buena Fé"
                        },
                        new
                        {
                            Id = 132,
                            IdProvincia = 12,
                            Nombre = "Valencia"
                        },
                        new
                        {
                            Id = 133,
                            IdProvincia = 12,
                            Nombre = "Mocache"
                        },
                        new
                        {
                            Id = 134,
                            IdProvincia = 12,
                            Nombre = "Quinsaloma"
                        },
                        new
                        {
                            Id = 135,
                            IdProvincia = 13,
                            Nombre = "Portoviejo"
                        },
                        new
                        {
                            Id = 136,
                            IdProvincia = 13,
                            Nombre = "Bolívar"
                        },
                        new
                        {
                            Id = 137,
                            IdProvincia = 13,
                            Nombre = "Chone"
                        },
                        new
                        {
                            Id = 138,
                            IdProvincia = 13,
                            Nombre = "El Carmen"
                        },
                        new
                        {
                            Id = 139,
                            IdProvincia = 13,
                            Nombre = "Flavio Alfaro"
                        },
                        new
                        {
                            Id = 140,
                            IdProvincia = 13,
                            Nombre = "Jipijapa"
                        },
                        new
                        {
                            Id = 141,
                            IdProvincia = 13,
                            Nombre = "Junín"
                        },
                        new
                        {
                            Id = 142,
                            IdProvincia = 13,
                            Nombre = "Manta"
                        },
                        new
                        {
                            Id = 143,
                            IdProvincia = 13,
                            Nombre = "Montecristi"
                        },
                        new
                        {
                            Id = 144,
                            IdProvincia = 13,
                            Nombre = "Paján"
                        },
                        new
                        {
                            Id = 145,
                            IdProvincia = 13,
                            Nombre = "Pichincha"
                        },
                        new
                        {
                            Id = 146,
                            IdProvincia = 13,
                            Nombre = "Rocafuerte"
                        },
                        new
                        {
                            Id = 147,
                            IdProvincia = 13,
                            Nombre = "Santa Ana"
                        },
                        new
                        {
                            Id = 148,
                            IdProvincia = 13,
                            Nombre = "Sucre"
                        },
                        new
                        {
                            Id = 149,
                            IdProvincia = 13,
                            Nombre = "Tosagua"
                        },
                        new
                        {
                            Id = 150,
                            IdProvincia = 13,
                            Nombre = "24 de Mayo"
                        },
                        new
                        {
                            Id = 151,
                            IdProvincia = 13,
                            Nombre = "Pedernales"
                        },
                        new
                        {
                            Id = 152,
                            IdProvincia = 13,
                            Nombre = "Olmedo"
                        },
                        new
                        {
                            Id = 153,
                            IdProvincia = 13,
                            Nombre = "Puerto López"
                        },
                        new
                        {
                            Id = 154,
                            IdProvincia = 13,
                            Nombre = "Jama"
                        },
                        new
                        {
                            Id = 155,
                            IdProvincia = 13,
                            Nombre = "Jaramijó"
                        },
                        new
                        {
                            Id = 156,
                            IdProvincia = 13,
                            Nombre = "San Vicente"
                        },
                        new
                        {
                            Id = 157,
                            IdProvincia = 14,
                            Nombre = "Morona"
                        },
                        new
                        {
                            Id = 158,
                            IdProvincia = 14,
                            Nombre = "Gualaquiza"
                        },
                        new
                        {
                            Id = 159,
                            IdProvincia = 14,
                            Nombre = "Limón Indanza"
                        },
                        new
                        {
                            Id = 160,
                            IdProvincia = 14,
                            Nombre = "Palora"
                        },
                        new
                        {
                            Id = 161,
                            IdProvincia = 14,
                            Nombre = "Santiago"
                        },
                        new
                        {
                            Id = 162,
                            IdProvincia = 14,
                            Nombre = "Sucúa"
                        },
                        new
                        {
                            Id = 163,
                            IdProvincia = 14,
                            Nombre = "Huamboya"
                        },
                        new
                        {
                            Id = 164,
                            IdProvincia = 14,
                            Nombre = "San Juan Bosco"
                        },
                        new
                        {
                            Id = 165,
                            IdProvincia = 14,
                            Nombre = "Taisha"
                        },
                        new
                        {
                            Id = 166,
                            IdProvincia = 14,
                            Nombre = "Logroño"
                        },
                        new
                        {
                            Id = 167,
                            IdProvincia = 14,
                            Nombre = "Pablo Sexto"
                        },
                        new
                        {
                            Id = 168,
                            IdProvincia = 14,
                            Nombre = "Tiwintza"
                        },
                        new
                        {
                            Id = 169,
                            IdProvincia = 15,
                            Nombre = "Tena"
                        },
                        new
                        {
                            Id = 170,
                            IdProvincia = 15,
                            Nombre = "Archidona"
                        },
                        new
                        {
                            Id = 171,
                            IdProvincia = 15,
                            Nombre = "El Chaco"
                        },
                        new
                        {
                            Id = 172,
                            IdProvincia = 15,
                            Nombre = "Quijos"
                        },
                        new
                        {
                            Id = 173,
                            IdProvincia = 15,
                            Nombre = "Carlos Julio Arosemena Tola"
                        },
                        new
                        {
                            Id = 174,
                            IdProvincia = 16,
                            Nombre = "Pastaza"
                        },
                        new
                        {
                            Id = 175,
                            IdProvincia = 16,
                            Nombre = "Mera"
                        },
                        new
                        {
                            Id = 176,
                            IdProvincia = 16,
                            Nombre = "Santa Clara"
                        },
                        new
                        {
                            Id = 177,
                            IdProvincia = 16,
                            Nombre = "Arajuno"
                        },
                        new
                        {
                            Id = 179,
                            IdProvincia = 17,
                            Nombre = "Cayambe"
                        },
                        new
                        {
                            Id = 180,
                            IdProvincia = 17,
                            Nombre = "Mejia"
                        },
                        new
                        {
                            Id = 181,
                            IdProvincia = 17,
                            Nombre = "Pedro Moncayo"
                        },
                        new
                        {
                            Id = 182,
                            IdProvincia = 17,
                            Nombre = "Rumiñahui"
                        },
                        new
                        {
                            Id = 183,
                            IdProvincia = 17,
                            Nombre = "San Miguel de Los Bancos"
                        },
                        new
                        {
                            Id = 184,
                            IdProvincia = 17,
                            Nombre = "Pedro Vicente Maldonado"
                        },
                        new
                        {
                            Id = 185,
                            IdProvincia = 17,
                            Nombre = "Puerto Quito"
                        },
                        new
                        {
                            Id = 186,
                            IdProvincia = 18,
                            Nombre = "Ambato"
                        },
                        new
                        {
                            Id = 187,
                            IdProvincia = 18,
                            Nombre = "Baños de Agua Santa"
                        },
                        new
                        {
                            Id = 188,
                            IdProvincia = 18,
                            Nombre = "Cevallos"
                        },
                        new
                        {
                            Id = 189,
                            IdProvincia = 18,
                            Nombre = "Mocha"
                        },
                        new
                        {
                            Id = 190,
                            IdProvincia = 18,
                            Nombre = "Patate"
                        },
                        new
                        {
                            Id = 191,
                            IdProvincia = 18,
                            Nombre = "Quero"
                        },
                        new
                        {
                            Id = 192,
                            IdProvincia = 18,
                            Nombre = "San Pedro de Pelileo"
                        },
                        new
                        {
                            Id = 193,
                            IdProvincia = 18,
                            Nombre = "Santiago de Píllaro"
                        },
                        new
                        {
                            Id = 194,
                            IdProvincia = 18,
                            Nombre = "Tisaleo"
                        },
                        new
                        {
                            Id = 195,
                            IdProvincia = 19,
                            Nombre = "Zamora"
                        },
                        new
                        {
                            Id = 196,
                            IdProvincia = 19,
                            Nombre = "Chinchipe"
                        },
                        new
                        {
                            Id = 197,
                            IdProvincia = 19,
                            Nombre = "Nangaritza"
                        },
                        new
                        {
                            Id = 198,
                            IdProvincia = 19,
                            Nombre = "Yacuambi"
                        },
                        new
                        {
                            Id = 199,
                            IdProvincia = 19,
                            Nombre = "Yantzaza (Yanzatza)"
                        },
                        new
                        {
                            Id = 200,
                            IdProvincia = 19,
                            Nombre = "El Pangui"
                        },
                        new
                        {
                            Id = 201,
                            IdProvincia = 19,
                            Nombre = "Centinela del Cóndor"
                        },
                        new
                        {
                            Id = 202,
                            IdProvincia = 19,
                            Nombre = "Palanda"
                        },
                        new
                        {
                            Id = 203,
                            IdProvincia = 19,
                            Nombre = "Paquisha"
                        },
                        new
                        {
                            Id = 204,
                            IdProvincia = 20,
                            Nombre = "San Cristóbal"
                        },
                        new
                        {
                            Id = 205,
                            IdProvincia = 20,
                            Nombre = "Isabela"
                        },
                        new
                        {
                            Id = 206,
                            IdProvincia = 20,
                            Nombre = "Santa Cruz"
                        },
                        new
                        {
                            Id = 207,
                            IdProvincia = 21,
                            Nombre = "Lago Agrio"
                        },
                        new
                        {
                            Id = 208,
                            IdProvincia = 21,
                            Nombre = "Gonzalo Pizarro"
                        },
                        new
                        {
                            Id = 209,
                            IdProvincia = 21,
                            Nombre = "Putumayo"
                        },
                        new
                        {
                            Id = 210,
                            IdProvincia = 21,
                            Nombre = "Shushufindi"
                        },
                        new
                        {
                            Id = 211,
                            IdProvincia = 21,
                            Nombre = "Sucumbíos"
                        },
                        new
                        {
                            Id = 212,
                            IdProvincia = 21,
                            Nombre = "Cascales"
                        },
                        new
                        {
                            Id = 213,
                            IdProvincia = 21,
                            Nombre = "Cuyabeno"
                        },
                        new
                        {
                            Id = 214,
                            IdProvincia = 22,
                            Nombre = "Orellana"
                        },
                        new
                        {
                            Id = 215,
                            IdProvincia = 22,
                            Nombre = "Aguarico"
                        },
                        new
                        {
                            Id = 216,
                            IdProvincia = 22,
                            Nombre = "La Joya de Los Sachas"
                        },
                        new
                        {
                            Id = 217,
                            IdProvincia = 22,
                            Nombre = "Loreto"
                        },
                        new
                        {
                            Id = 218,
                            IdProvincia = 23,
                            Nombre = "Santo Domingo"
                        },
                        new
                        {
                            Id = 219,
                            IdProvincia = 24,
                            Nombre = "Santa Elena"
                        },
                        new
                        {
                            Id = 220,
                            IdProvincia = 24,
                            Nombre = "La Libertad"
                        },
                        new
                        {
                            Id = 221,
                            IdProvincia = 24,
                            Nombre = "Salinas"
                        },
                        new
                        {
                            Id = 222,
                            IdProvincia = 25,
                            Nombre = "Las Golondrinas"
                        },
                        new
                        {
                            Id = 223,
                            IdProvincia = 25,
                            Nombre = "Manga del Cura"
                        },
                        new
                        {
                            Id = 224,
                            IdProvincia = 25,
                            Nombre = "El Piedrero"
                        });
                });

            modelBuilder.Entity("Datos.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("ContactoCorreo")
                        .HasColumnName("contacto_correo")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("ContactoTelefono")
                        .HasColumnName("contacto_telefono")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("CuentaId")
                        .HasColumnType("int");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnName("fecha_registro")
                        .HasColumnType("datetime");

                    b.Property<int>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<int>("IdCiudad")
                        .HasColumnName("idCiudad")
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnName("idPersona")
                        .HasColumnType("int");

                    b.Property<decimal>("LimiteCredito")
                        .HasColumnName("limite_credito")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("CuentaId");

                    b.HasIndex("EmpresaId");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdPersona");

                    b.ToTable("cliente");
                });

            modelBuilder.Entity("Datos.Models.Cuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdBanco")
                        .HasColumnName("idBanco")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoCuenta")
                        .HasColumnName("idTipocuenta")
                        .HasColumnType("int");

                    b.Property<string>("NumCuenta")
                        .IsRequired()
                        .HasColumnName("numcuenta")
                        .HasColumnType("VARCHAR(80)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdBanco");

                    b.HasIndex("IdTipoCuenta");

                    b.ToTable("cuenta");
                });

            modelBuilder.Entity("Datos.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnName("empresa")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime?>("FechaContrato")
                        .HasColumnName("fecha_contrato")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCiudad")
                        .HasColumnName("idCiudad")
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnName("idPersona")
                        .HasColumnType("int");

                    b.Property<float>("Sueldo")
                        .HasColumnName("sueldo")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdPersona");

                    b.ToTable("empleado");
                });

            modelBuilder.Entity("Datos.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Correo")
                        .HasColumnName("correo")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Direccion")
                        .HasColumnName("direccion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdTipoEmpresa")
                        .HasColumnName("idTipoEmpresa")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnName("telefono")
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdTipoEmpresa");

                    b.ToTable("empresa");
                });

            modelBuilder.Entity("Datos.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Artista")
                        .HasColumnName("artista")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<string>("Direccion")
                        .HasColumnName("direccion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnName("fecha_evento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<string>("Promotor")
                        .HasColumnName("promotor")
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("Id")
                        .HasName("PK_evento");

                    b.HasIndex("IdCiudad");

                    b.ToTable("evento");
                });

            modelBuilder.Entity("Datos.Models.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Codigo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("FormaPagos");
                });

            modelBuilder.Entity("Datos.Models.Inventario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<int>("Cantidad")
                        .HasColumnName("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdProducto")
                        .HasColumnName("idProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnName("precio_compra")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnName("precio_venta")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Ubicacion")
                        .HasColumnName("ubicacion")
                        .HasColumnType("VARCHAR(500)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdProducto")
                        .IsUnique();

                    b.ToTable("inventario");
                });

            modelBuilder.Entity("Datos.Models.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnName("apellido")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnName("cedula")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Celular")
                        .HasColumnName("celular")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int?>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnName("correo")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Direccion")
                        .HasColumnName("direccion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<string>("Genero")
                        .HasColumnName("genero")
                        .HasColumnType("VARCHAR(20)");

                    b.Property<int>("IdCiudad")
                        .HasColumnName("idCiudad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Telefono")
                        .HasColumnName("telefono")
                        .HasColumnType("VARCHAR(20)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("CiudadId");

                    b.HasIndex("IdCiudad");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("Datos.Models.Presupuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<int>("Codigo")
                        .HasColumnName("codigo")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<float>("Descuento")
                        .HasColumnName("descuento")
                        .HasColumnType("float");

                    b.Property<int?>("EventoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCotizacion")
                        .HasColumnName("fecha_cotizacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnName("fecha_evento")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdEvento")
                        .HasColumnName("idevento")
                        .HasColumnType("int");

                    b.Property<float>("Iva")
                        .HasColumnName("iva")
                        .HasColumnType("float");

                    b.Property<float>("Total")
                        .HasColumnName("total")
                        .HasColumnType("float");

                    b.Property<float>("Version")
                        .HasColumnName("version")
                        .HasColumnType("float");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("EventoId");

                    b.HasIndex("IdEvento");

                    b.ToTable("presupuesto");
                });

            modelBuilder.Entity("Datos.Models.PresupuestoDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdPresupuesto")
                        .HasColumnName("idPresupuesto")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnName("idProducto")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnName("idServicio")
                        .HasColumnType("int");

                    b.Property<string>("Servicio")
                        .HasColumnName("servicio")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdPresupuesto");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdServicio");

                    b.ToTable("presupuesto_detalle");
                });

            modelBuilder.Entity("Datos.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdCategoriaProducto")
                        .HasColumnName("idCategoriaProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoProducto")
                        .HasColumnName("idTipoProducto")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<float>("Precio")
                        .HasColumnName("precio")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoriaProducto");

                    b.HasIndex("IdTipoProducto");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("Datos.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Empresa")
                        .IsRequired()
                        .HasColumnName("empresa")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCiudad")
                        .HasColumnName("idCiudad")
                        .HasColumnType("int");

                    b.Property<int>("IdCuenta")
                        .HasColumnName("idCuenta")
                        .HasColumnType("int");

                    b.Property<int>("IdEmpresa")
                        .HasColumnName("idempresa")
                        .HasColumnType("int");

                    b.Property<int>("IdFormaPago")
                        .HasColumnType("int");

                    b.Property<int>("IdPersona")
                        .HasColumnName("idPersona")
                        .HasColumnType("int");

                    b.Property<int>("ServicioId")
                        .HasColumnName("idervicio")
                        .HasColumnType("int");

                    b.Property<string>("TipoServicio")
                        .HasColumnName("tiposervicio")
                        .HasColumnType("VARCHAR(50)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdCiudad");

                    b.HasIndex("IdCuenta");

                    b.HasIndex("IdEmpresa");

                    b.HasIndex("IdFormaPago");

                    b.HasIndex("IdPersona");

                    b.HasIndex("ServicioId");

                    b.ToTable("proveedor");
                });

            modelBuilder.Entity("Datos.Models.Provincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("nombre")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id");

                    b.ToTable("provincias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Azuay"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Bolívar"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Cañar"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Carchi"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Cotopaxi"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Chimborazo"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "El Oro"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Esmeraldas"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Guayas"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Imbabura"
                        },
                        new
                        {
                            Id = 11,
                            Nombre = "Loja"
                        },
                        new
                        {
                            Id = 12,
                            Nombre = "Los Rios"
                        },
                        new
                        {
                            Id = 13,
                            Nombre = "Manabi"
                        },
                        new
                        {
                            Id = 14,
                            Nombre = "Morona Santiago"
                        },
                        new
                        {
                            Id = 15,
                            Nombre = "Napo"
                        },
                        new
                        {
                            Id = 16,
                            Nombre = "Pastaza"
                        },
                        new
                        {
                            Id = 17,
                            Nombre = "Pichincha"
                        },
                        new
                        {
                            Id = 18,
                            Nombre = "Tungurahua"
                        },
                        new
                        {
                            Id = 19,
                            Nombre = "Zamora Chinchipe"
                        },
                        new
                        {
                            Id = 20,
                            Nombre = "Galápagos"
                        },
                        new
                        {
                            Id = 21,
                            Nombre = "Sucumbíos"
                        },
                        new
                        {
                            Id = 22,
                            Nombre = "Orellana"
                        },
                        new
                        {
                            Id = 23,
                            Nombre = "Santo Domingo de Los Tsáchilas"
                        },
                        new
                        {
                            Id = 24,
                            Nombre = "Santa Elena"
                        },
                        new
                        {
                            Id = 25,
                            Nombre = "Zonas No Delimitadas"
                        });
                });

            modelBuilder.Entity("Datos.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("VARCHAR(70)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_rol");

                    b.ToTable("rol");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = 1ul,
                            Codigo = "ADM",
                            Descripcion = "Administrador",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Activo = 1ul,
                            Codigo = "USER",
                            Descripcion = "Usuario Estándar",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Activo = 1ul,
                            Codigo = "SUP",
                            Descripcion = "Supervisor",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Activo = 1ul,
                            Codigo = "MNGR",
                            Descripcion = "Gerente",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Activo = 1ul,
                            Codigo = "HR",
                            Descripcion = "Recursos Humanos",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Activo = 1ul,
                            Codigo = "ACCT",
                            Descripcion = "Contador",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Activo = 1ul,
                            Codigo = "SALES",
                            Descripcion = "Ventas",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Activo = 1ul,
                            Codigo = "IT",
                            Descripcion = "Tecnología de la Información",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Activo = 1ul,
                            Codigo = "SUPPORT",
                            Descripcion = "Soporte Técnico",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Activo = 1ul,
                            Codigo = "ANALYST",
                            Descripcion = "Analista",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Activo = 1ul,
                            Codigo = "PROJMAN",
                            Descripcion = "Gerente de Proyecto",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Activo = 1ul,
                            Codigo = "MARKET",
                            Descripcion = "Marketing",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Activo = 1ul,
                            Codigo = "CUSTSERV",
                            Descripcion = "Servicio al Cliente",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Activo = 1ul,
                            Codigo = "DEV",
                            Descripcion = "Desarrollador",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Activo = 1ul,
                            Codigo = "QA",
                            Descripcion = "Aseguramiento de Calidad",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 722, DateTimeKind.Utc).AddTicks(9430),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Datos.Models.Servicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.Property<int>("IdTipoServicio")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("IdTipoServicio");

                    b.ToTable("servicio");
                });

            modelBuilder.Entity("Datos.Models.TipoCuenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipocuenta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = 1ul,
                            Codigo = "CA",
                            Descripcion = "Cuentas de Ahorros",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429)
                        },
                        new
                        {
                            Id = 2,
                            Activo = 1ul,
                            Codigo = "CC",
                            Descripcion = "Cuentas Corriente",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429)
                        },
                        new
                        {
                            Id = 3,
                            Activo = 1ul,
                            Codigo = "PF",
                            Descripcion = "Cuentas a Plazo Fijo",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429)
                        },
                        new
                        {
                            Id = 4,
                            Activo = 1ul,
                            Codigo = "MM",
                            Descripcion = "Cuentas de Mercado Monetario",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429)
                        },
                        new
                        {
                            Id = 5,
                            Activo = 1ul,
                            Codigo = "IP",
                            Descripcion = "Cuentas de Inversión Personal",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 728, DateTimeKind.Utc).AddTicks(9429)
                        });
                });

            modelBuilder.Entity("Datos.Models.TipoEmpresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipoempresa");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = 1ul,
                            Codigo = "SA",
                            Descripcion = "Sociedad Anónima",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428)
                        },
                        new
                        {
                            Id = 2,
                            Activo = 1ul,
                            Codigo = "SRL",
                            Descripcion = "Sociedad de Responsabilidad Limitada",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428)
                        },
                        new
                        {
                            Id = 3,
                            Activo = 1ul,
                            Codigo = "SC",
                            Descripcion = "Sociedad Colectiva",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428)
                        },
                        new
                        {
                            Id = 4,
                            Activo = 1ul,
                            Codigo = "SC",
                            Descripcion = "Sociedad en Comandita",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428)
                        },
                        new
                        {
                            Id = 5,
                            Activo = 1ul,
                            Codigo = "COOP",
                            Descripcion = "Cooperativa",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428),
                            FechaModificacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 731, DateTimeKind.Utc).AddTicks(9428)
                        });
                });

            modelBuilder.Entity("Datos.Models.TipoProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("descripcion")
                        .HasColumnType("VARCHAR(200)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipo_producto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = 1ul,
                            Codigo = "SMARTPHONE",
                            Descripcion = "Smartphone",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Activo = 1ul,
                            Codigo = "LAPTOP",
                            Descripcion = "Laptop",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Activo = 1ul,
                            Codigo = "TABLET",
                            Descripcion = "Tablet",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Activo = 1ul,
                            Codigo = "SMARTWATCH",
                            Descripcion = "Smartwatch",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Activo = 1ul,
                            Codigo = "TV",
                            Descripcion = "TV",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Activo = 1ul,
                            Codigo = "CAMERA",
                            Descripcion = "Cámara Fotográfica",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Activo = 1ul,
                            Codigo = "HEADPHONES",
                            Descripcion = "Audífonos",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Activo = 1ul,
                            Codigo = "PRINTER",
                            Descripcion = "Impresora",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Activo = 1ul,
                            Codigo = "MONITOR",
                            Descripcion = "Monitor",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Activo = 1ul,
                            Codigo = "ROUTER",
                            Descripcion = "Router",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Activo = 1ul,
                            Codigo = "MICROWAVE",
                            Descripcion = "Microondas",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Activo = 1ul,
                            Codigo = "FRIDGE",
                            Descripcion = "Refrigerador",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 13,
                            Activo = 1ul,
                            Codigo = "WASHING_MACHINE",
                            Descripcion = "Lavadora",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 14,
                            Activo = 1ul,
                            Codigo = "DRYER",
                            Descripcion = "Secadora",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 15,
                            Activo = 1ul,
                            Codigo = "BLENDER",
                            Descripcion = "Licuadora",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 16,
                            Activo = 1ul,
                            Codigo = "VACUUM_CLEANER",
                            Descripcion = "Aspiradora",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 17,
                            Activo = 1ul,
                            Codigo = "COFFEE_MACHINE",
                            Descripcion = "Cafetera",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 18,
                            Activo = 1ul,
                            Codigo = "TOASTER",
                            Descripcion = "Tostadora",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 19,
                            Activo = 1ul,
                            Codigo = "IRON",
                            Descripcion = "Plancha",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 20,
                            Activo = 1ul,
                            Codigo = "PROJECTOR",
                            Descripcion = "Proyector",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 31,
                            Activo = 1ul,
                            Codigo = "FRUITS",
                            Descripcion = "Frutas",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 32,
                            Activo = 1ul,
                            Codigo = "VEGETABLES",
                            Descripcion = "Verduras",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 33,
                            Activo = 1ul,
                            Codigo = "DAIRY",
                            Descripcion = "Productos lácteos",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 34,
                            Activo = 1ul,
                            Codigo = "BAKERY",
                            Descripcion = "Panadería",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 35,
                            Activo = 1ul,
                            Codigo = "MEAT",
                            Descripcion = "Carne y aves",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 36,
                            Activo = 1ul,
                            Codigo = "SEAFOOD",
                            Descripcion = "Mariscos",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 37,
                            Activo = 1ul,
                            Codigo = "BEVERAGES",
                            Descripcion = "Bebidas",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 38,
                            Activo = 1ul,
                            Codigo = "SNACKS",
                            Descripcion = "Snacks y golosinas",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 39,
                            Activo = 1ul,
                            Codigo = "CONDIMENTS",
                            Descripcion = "Condimentos y salsas",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 40,
                            Activo = 1ul,
                            Codigo = "CANNED_FOODS",
                            Descripcion = "Alimentos enlatados",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 735, DateTimeKind.Utc).AddTicks(9414),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Datos.Models.TipoServicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<ulong>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnName("codigo")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Descripcion")
                        .HasColumnName("descripcion")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("tipo_servicio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Activo = 1ul,
                            Codigo = "CAMERINO",
                            Descripcion = "Camerino",
                            FechaCreacionUTC = new DateTime(2024, 7, 12, 1, 8, 40, 738, DateTimeKind.Utc).AddTicks(9431),
                            FechaModificacionUTC = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Datos.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("int");

                    b.Property<bool>("Activo")
                        .HasColumnName("activo")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("ContrasenaHash")
                        .IsRequired()
                        .HasColumnName("contrasenaHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("ContrasenaSalt")
                        .IsRequired()
                        .HasColumnName("contrasenaSalt")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("FechaCreacionUTC")
                        .HasColumnName("fecha_creacion_utc")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaModificacionUTC")
                        .HasColumnName("fecha_modificacion_utc")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("IdPersona")
                        .HasColumnName("idPersona")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnName("idRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnName("nombreUsuario")
                        .HasColumnType("varchar(100) CHARACTER SET utf8mb4")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("IdPersona")
                        .IsUnique();

                    b.HasIndex("IdRol");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("Datos.Models.Atributo", b =>
                {
                    b.HasOne("Datos.Models.CategoriaAtributo", "CategoriaAtributo")
                        .WithMany("Atributos")
                        .HasForeignKey("IdCategoriaAtributo")
                        .HasConstraintName("categoria_atributo_fk")
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.AtributoProducto", b =>
                {
                    b.HasOne("Datos.Models.Atributo", "Atributo")
                        .WithMany("AtributosProductos")
                        .HasForeignKey("IdAtributo")
                        .HasConstraintName("atributo_producto_fk_atributo")
                        .IsRequired();

                    b.HasOne("Datos.Models.Producto", "Producto")
                        .WithMany("AtributosProductos")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("atributo_producto_fk_producto")
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Banco", b =>
                {
                    b.HasOne("Datos.Models.CategoriaBanco", "CategoriaBanco")
                        .WithMany("Bancos")
                        .HasForeignKey("IdCategoriaBanco")
                        .HasConstraintName("categoria_banco_bancofk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Ciudad", b =>
                {
                    b.HasOne("Datos.Models.Provincia", "ProvinciaNavigation")
                        .WithMany("Ciudades")
                        .HasForeignKey("IdProvincia")
                        .HasConstraintName("FK_ciudad_provincia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Cliente", b =>
                {
                    b.HasOne("Datos.Models.Cuenta", "Cuenta")
                        .WithMany("Clientes")
                        .HasForeignKey("CuentaId")
                        .HasConstraintName("cliente_cuentafk")
                        .IsRequired();

                    b.HasOne("Datos.Models.Empresa", "Empresa")
                        .WithMany("Clientes")
                        .HasForeignKey("EmpresaId")
                        .HasConstraintName("cliente_empresafk")
                        .IsRequired();

                    b.HasOne("Datos.Models.FormaPago", "FormaPago")
                        .WithMany("Clientes")
                        .HasForeignKey("FormaPagoId")
                        .HasConstraintName("cliente_formapagofk")
                        .IsRequired();

                    b.HasOne("Datos.Models.Ciudad", "Ciudad")
                        .WithMany("Clientes")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("cliente_ciudadfk")
                        .IsRequired();

                    b.HasOne("Datos.Models.Persona", "Persona")
                        .WithMany("Clientes")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("cliente_personafk")
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Cuenta", b =>
                {
                    b.HasOne("Datos.Models.Banco", "IdBancoNavigation")
                        .WithMany("Cuenta")
                        .HasForeignKey("IdBanco")
                        .HasConstraintName("banco_cuentafk")
                        .IsRequired();

                    b.HasOne("Datos.Models.TipoCuenta", "IdTipoCuentaNavigation")
                        .WithMany("Cuenta")
                        .HasForeignKey("IdTipoCuenta")
                        .HasConstraintName("tipocuenta_cuentafk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Empleado", b =>
                {
                    b.HasOne("Datos.Models.Ciudad", "IdCiudadNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("empleado_ciudadfk")
                        .IsRequired();

                    b.HasOne("Datos.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("empleado_personafk")
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Empresa", b =>
                {
                    b.HasOne("Datos.Models.TipoEmpresa", "IdTipoEmpresaNavigation")
                        .WithMany("Empresas")
                        .HasForeignKey("IdTipoEmpresa")
                        .HasConstraintName("tipoempresa_empresafk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Evento", b =>
                {
                    b.HasOne("Datos.Models.Ciudad", "CiudadNavegation")
                        .WithMany("Eventos")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("FK_evento_ciudad")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Inventario", b =>
                {
                    b.HasOne("Datos.Models.Producto", "Producto")
                        .WithOne("Inventario")
                        .HasForeignKey("Datos.Models.Inventario", "IdProducto")
                        .HasConstraintName("inventario_producto_fk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Persona", b =>
                {
                    b.HasOne("Datos.Models.Ciudad", null)
                        .WithMany("Personas")
                        .HasForeignKey("CiudadId");

                    b.HasOne("Datos.Models.Ciudad", "CiudadNavegation")
                        .WithMany()
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("persona_ciudadfk")
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Presupuesto", b =>
                {
                    b.HasOne("Datos.Models.Evento", null)
                        .WithMany("PresupuestoNavegation")
                        .HasForeignKey("EventoId");

                    b.HasOne("Datos.Models.Evento", "IdeventoNavigation")
                        .WithMany()
                        .HasForeignKey("IdEvento")
                        .HasConstraintName("presupuesto_eventofk")
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.PresupuestoDetalle", b =>
                {
                    b.HasOne("Datos.Models.Presupuesto", "IdPresupuestoNavigation")
                        .WithMany("PresupuestoDetalles")
                        .HasForeignKey("IdPresupuesto")
                        .HasConstraintName("presupuesto_detalle_presupuestofk")
                        .IsRequired();

                    b.HasOne("Datos.Models.Producto", "IdproductoNavigation")
                        .WithMany("PresupuestoDetalles")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("producto_presupuestodetalle_fk_producto")
                        .IsRequired();

                    b.HasOne("Datos.Models.Servicio", "ServicionNavegation")
                        .WithMany("PresupuestoDetalles")
                        .HasForeignKey("IdServicio")
                        .HasConstraintName("servicio_presupuestodetallefk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Producto", b =>
                {
                    b.HasOne("Datos.Models.CategoriaProducto", "CategoriaProducto")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoriaProducto")
                        .HasConstraintName("producto_categoria_producto_fk")
                        .IsRequired();

                    b.HasOne("Datos.Models.TipoProducto", "TipoProducto")
                        .WithMany("Productos")
                        .HasForeignKey("IdTipoProducto")
                        .HasConstraintName("producto_tipoproducto_fk")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Datos.Models.Proveedor", b =>
                {
                    b.HasOne("Datos.Models.Ciudad", "IdCiudadNavigation")
                        .WithMany("Proveedors")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("proveedor_ciudadfk")
                        .IsRequired();

                    b.HasOne("Datos.Models.Cuenta", "IdCuentaNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdCuenta")
                        .HasConstraintName("proveedor_cuentafk")
                        .IsRequired();

                    b.HasOne("Datos.Models.Empresa", "IdEmpresaNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdEmpresa")
                        .HasConstraintName("proveedor_empresafk")
                        .IsRequired();

                    b.HasOne("Datos.Models.FormaPago", "FormaPago")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdFormaPago")
                        .HasConstraintName("proveedor_IdFormaPagofk")
                        .IsRequired();

                    b.HasOne("Datos.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("proveedor_personafk")
                        .IsRequired();

                    b.HasOne("Datos.Models.Servicio", "ServicionNavegation")
                        .WithMany("Proveedores")
                        .HasForeignKey("ServicioId")
                        .HasConstraintName("servicio_proveedorfk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Servicio", b =>
                {
                    b.HasOne("Datos.Models.TipoServicio", "TipoServicio")
                        .WithMany("Servicios")
                        .HasForeignKey("IdTipoServicio")
                        .HasConstraintName("servicio_tipo_servicio_fk")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Datos.Models.Usuario", b =>
                {
                    b.HasOne("Datos.Models.Persona", "PersonaNavegation")
                        .WithOne("UsuarioNavegation")
                        .HasForeignKey("Datos.Models.Usuario", "IdPersona")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Datos.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK_usuario_rol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
